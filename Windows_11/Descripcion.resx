<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="textBox2.Text" xml:space="preserve">
    <value>                              Requisitos de Instalación.

Microsoft ha establecido nuevos requisitos mínimos de hardware para instalar y ejecutar Windows 11 en una computadora. Los requisitos mínimos son los siguientes:

•Procesador: procesador de 64 bits compatible con 2 o más núcleos y velocidad de reloj de 1 GHz o superior. Los procesadores de las familias Intel Core de octava generación (Coffee Lake-S) y AMD Ryzen 2000 son los requisitos mínimos.

•Memoria RAM: 4 GB o más.

•Almacenamiento: 64 GB o más de almacenamiento interno, con un dispositivo de almacenamiento adicional (por ejemplo, una unidad flash USB) para la actualización de Windows.

•Tarjeta gráfica: compatible con DirectX 12 o posterior, con un controlador WDDM 2.0 y capacidad para reproducir contenido de vídeo en resolución de al menos 720p. Los requisitos mínimos para tarjetas gráficas incluyen Intel HD Graphics 620 o superior, Nvidia GeForce 600 Series o superior, o AMD Radeon HD 7000 Series o superior.

•Pantalla: pantalla de al menos 9 pulgadas, con una resolución de al menos 720p.

Además de estos requisitos mínimos, Microsoft también ha establecido requisitos recomendados para una experiencia de usuario óptima en Windows 11:

•Procesador: procesador de 64 bits con 4 o más núcleos y velocidad de reloj de 1 GHz o superior. Los procesadores de las familias Intel Core de novena generación (Coffee Lake-R) y AMD Ryzen 3000 son los recomendados.

•Memoria RAM: 8 GB o más.

•Almacenamiento: SSD de 128 GB o más.

•Tarjeta gráfica: compatible con DirectX 12 o posterior, con un controlador WDDM 2.0 y capacidad para reproducir contenido de vídeo en resolución de al menos 1080p.

•Pantalla: pantalla de al menos 13 pulgadas, con una resolución de al menos 1080p.

</value>
  </data>
  <data name="textBox1.Text" xml:space="preserve">
    <value>                              Descripción

Windows 11 es la última versión del sistema operativo de Microsoft, lanzado en octubre de 2021. Esta nueva versión ofrece una experiencia de usuario más moderna y simplificada, así como una serie de nuevas características y mejoras en el rendimiento.
Entre las características más destacadas de Windows 11 se incluyen:

•Interfaz de usuario rediseñada, con un aspecto más limpio y moderno, nuevos iconos y una barra de tareas centrada de manera predeterminada.

•La nueva función Snap Layouts permite a los usuarios organizar fácilmente múltiples ventanas en la pantalla de una manera más intuitiva.

•Snap Groups permite a los usuarios guardar grupos de ventanas abiertas y volver a abrirlas rápidamente en el mismo diseño.

•Microsoft Teams está integrado de forma nativa en el sistema operativo, lo que permite a los usuarios comunicarse y colaborar de forma más sencilla.

•Mejoras en la integración de Xbox Game Pass, lo que permite a los usuarios acceder a una biblioteca de juegos de alta calidad directamente desde el sistema operativo.

•Mejoras en la seguridad, incluyendo una nueva función de inicio de sesión sin contraseña llamada Windows Hello for Business.

•Mejoras en el rendimiento, incluyendo un inicio más rápido, un menor consumo de energía y una mejor optimización para dispositivos de pantalla táctil.


En general, Windows 11 es una actualización importante de Windows 10 que ofrece una experiencia de usuario más moderna y simplificada, así como una serie de nuevas características y mejoras en el rendimiento.

</value>
  </data>
</root>