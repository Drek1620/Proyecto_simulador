<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="textBox2.Text" xml:space="preserve">
    <value>                              Requisitos de Instalación.

Los requisitos mínimos para instalar y ejecutar Ubuntu pueden variar ligeramente según la versión específica de Ubuntu, pero en general se recomienda lo siguiente:

•Procesador: procesador de 64 bits con al menos 2 núcleos o más.

•Memoria RAM: 2 GB o más. Se recomienda 4 GB o más para un mejor rendimiento.

•Almacenamiento: al menos 25 GB de espacio libre en disco duro.

•Tarjeta gráfica: se recomienda una tarjeta gráfica compatible con aceleración de hardware para una mejor experiencia de usuario. La mayoría de las tarjetas gráficas modernas son compatibles con Ubuntu.

•Pantalla: resolución de pantalla de al menos 1024 x 768 píxeles.

Es importante tener en cuenta que estos son solo los requisitos mínimos y que algunos programas y funciones específicas pueden requerir hardware adicional o más potente.

Además, también es importante asegurarse de que el hardware de la computadora sea compatible con la versión específica de Ubuntu que se desea instalar. Por ejemplo, algunas versiones de Ubuntu pueden requerir una CPU de 64 bits, por lo que no se pueden instalar en computadoras con CPU de 32 bits.

En general, Ubuntu es conocido por ser una distribución de Linux ligera y eficiente en recursos, por lo que puede funcionar bien incluso en hardware más antiguo o menos potente.

</value>
  </data>
  <data name="textBox1.Text" xml:space="preserve">
    <value>                              Descripción

Ubuntu es un sistema operativo basado en Linux de código abierto y gratuito, diseñado para ser fácil de usar y personalizar. Es uno de los sistemas operativos más populares para computadoras personales y servidores.

Ubuntu es conocido por su enfoque en la accesibilidad, la facilidad de instalación y uso, y su amplia gama de software gratuito y de código abierto disponible en su repositorio oficial. Además, Ubuntu es conocido por sus actualizaciones regulares y su comunidad de usuarios activos, lo que hace que sea fácil obtener ayuda y soporte.

Una de las características más notables de Ubuntu es su entorno de escritorio, que es conocido como Unity. Unity ofrece un diseño moderno y elegante, y una experiencia de usuario intuitiva y fácil de usar. Sin embargo, en versiones recientes, ha sido reemplazado por GNOME.

Ubuntu también es conocido por sus versiones de soporte a largo plazo (LTS), que son lanzadas cada dos años y reciben actualizaciones de seguridad y correcciones de errores durante cinco años. Esto hace que Ubuntu sea una opción popular para usuarios y organizaciones que buscan un sistema operativo estable y confiable.

En resumen, Ubuntu es un sistema operativo Linux de código abierto, fácil de usar, personalizable y gratuito, con una gran comunidad de usuarios y una amplia gama de software disponible.
</value>
  </data>
</root>